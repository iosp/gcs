<UserControl x:Class="GCSArduino.View.QuadsStatusView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
             xmlns:resources="clr-namespace:GCSArduino.Resources" xmlns:enums="clr-namespace:GCSArduino.Enums"
             xmlns:enums2="clr-namespace:Common.Enums;assembly=Common"
             DataContext="{Binding Source={StaticResource Locator}, Path=QuadsStatusViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1000">
    <UserControl.Resources>
        <Storyboard x:Key="closeToolBox">
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Status" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static VerticalAlignment.Top}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Status" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static HorizontalAlignment.Right}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="openToolBox">
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Status" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static HorizontalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Status" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static VerticalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="minus_status">
            <BeginStoryboard x:Name="closeToolBox_BeginStoryboard" Storyboard="{StaticResource closeToolBox}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="minus_status">
            <BeginStoryboard x:Name="openToolBox_BeginStoryboard" Storyboard="{StaticResource openToolBox}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid x:Name="LayoutRoot">
        <Border x:Name="Status" Margin="0,0,0,-0.001" Background="#FF516D7A" BorderThickness="0" CornerRadius="2" >
            <i:Interaction.Behaviors>
                <il:MouseDragElementBehavior/>
            </i:Interaction.Behaviors>
            <StackPanel Margin="0" Orientation="Vertical">
                <WrapPanel HorizontalAlignment="Right" Margin="0,2" Height="20">
                    <TextBlock Margin="5,0" FontFamily="Verdana" FontSize="12" Foreground="White" Text="Status" TextWrapping="Wrap"/>
                    <ToggleButton Margin="0,2,0,0" Style="{DynamicResource KomunaPinToggleButton}" ToolTip="נעץ במקום" Width="10" Height="10" Content="ToggleButton"/>
                    <ToggleButton x:Name="minus_status" Margin="0,2,4,0" Style="{DynamicResource komunaMinimizeToggleButton}" ToolTip="מזער" Width="10" Height="10" Content="ToggleButton" />
                </WrapPanel>
                <Border x:Name="border" Margin="3,0,3,3" Background="#FF374A53" BorderThickness="0" CornerRadius="2" Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                    <ListView Grid.Row="0" ItemsSource="{Binding Vehicles}" Background="Transparent" SelectedItem="{Binding VehicleSelected,  Mode=TwoWay}" >
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="WhiteSmoke" />
                                <Setter Property="FontSize" Value="20"></Setter>
                            </Style>
                            <Style  TargetType="{x:Type ScrollBar}">
                                <Setter Property="Height" Value="10"/>
                                <Setter Property="Background" Value="Black"></Setter>
                            </Style>
                        </ListView.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Foreground" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Black" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Black" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                        </ListBox.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="SelectAll" Width="100">
                                    <GridViewColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                    <CheckBox  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0" IsChecked="{Binding Source={StaticResource Locator}, Path=QuadsStatusViewModel.SelectAll}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                                <i:InvokeCommandAction Command="{Binding }" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </CheckBox>
                                                <TextBlock Text="Selected" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0" ></TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.HeaderTemplate>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsSelected , Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                    <!--<GridViewColumn Header="ID"         DisplayMemberBinding="{Binding ID}"                 Width="80"></GridViewColumn>-->
                                    <GridViewColumn Header="Name"       DisplayMemberBinding="{Binding Name}"               Width="120"></GridViewColumn>
                                    <!--<GridViewColumn Header="Latitude"   DisplayMemberBinding="{Binding Latitude}"           Width="100"></GridViewColumn>
                                    <GridViewColumn Header="Longitude"  DisplayMemberBinding="{Binding Longitude}"          Width="100"></GridViewColumn>-->
                                    <GridViewColumn Header="Altitude"   DisplayMemberBinding="{Binding Altitude}" Width="80"></GridViewColumn>
                                    <!--<GridViewColumn Header="Task ID"    DisplayMemberBinding="{Binding Task.TaskID}"             Width="80"></GridViewColumn>-->
                                    <GridViewColumn Header="Battery"    DisplayMemberBinding="{Binding QuadStatus.BatteryVoltage}"  Width="80"></GridViewColumn>
                                    <GridViewColumn Width="120" Header="Task" >
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource Locator}, Path=QuadsStatusViewModel.Tasks}" x:Name="ComboBox" Height="Auto"  Width="100" MinWidth="100" SelectedItem="{Binding Task}" DisplayMemberPath="TaskID" >
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <i:InvokeCommandAction Command="{Binding Source={StaticResource Locator}, Path=QuadsStatusViewModel.SelectTaskCommand}" CommandParameter="{Binding}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="WP"         DisplayMemberBinding="{Binding NextWaypoint}"           Width="80"></GridViewColumn>
                                    <GridViewColumn Header="Dis WP"     DisplayMemberBinding="{Binding DistanceFromTarget}"     Width="80"></GridViewColumn>
                                    <GridViewColumn Header="Time WP"    DisplayMemberBinding="{Binding TimeInWaypoint}"         Width="90"></GridViewColumn>
                                    <GridViewColumn Header="Mode"       DisplayMemberBinding="{Binding QuadStatus.Mode}"        Width="90"></GridViewColumn>
                                    <GridViewColumn Header="MStatus"    DisplayMemberBinding="{Binding IsActivateMission}"      Width="90"></GridViewColumn>
                                </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                                <Button Grid.Column="0" Grid.Row="0" Content="Take Off"      Command="{Binding TakeOffCommand}"  Style="{StaticResource ButtonWhiteStyle}"></Button>
                                <TextBox Text="{Binding AltTakeOff}" Width="80" Height="50" Foreground="White" Background="Transparent" FontSize="20" TextAlignment="Center" VerticalContentAlignment="Center" ></TextBox>
                        </StackPanel>
                        <GroupBox  HorizontalAlignment="Left" VerticalAlignment="Top" Header="Mode Commands"  Height="80" Width="520" Foreground="White" FontSize="16">
                            <StackPanel Orientation="Horizontal">
                                <Button Grid.Column="0" Grid.Row="0" Content="Arm"      Command="{Binding ArmModeCommand}"  Style="{StaticResource ButtonWhiteStyle}"></Button>
                                <Button Grid.Column="0" Grid.Row="0" Content="Auto"     Command="{Binding QuadModeCommand}" CommandParameter="{x:Static enums2:VehicleModeEnum.Auto  }" Style="{StaticResource ButtonWhiteStyle}"></Button>
                                <Button Grid.Column="0" Grid.Row="0" Content="RTL"      Command="{Binding QuadModeCommand}" CommandParameter="{x:Static enums2:VehicleModeEnum.RTL   }" Style="{StaticResource ButtonWhiteStyle}"></Button>
                                <Button Grid.Column="0" Grid.Row="0" Content="Land"     Command="{Binding QuadModeCommand}" CommandParameter="{x:Static enums2:VehicleModeEnum.Land   }" Style="{StaticResource ButtonWhiteStyle}"></Button>
                                <Button Grid.Column="0" Grid.Row="0" Content="Dis Arm"  Command="{Binding DisArmModeCommand}"  Style="{StaticResource ButtonWhiteStyle}"></Button>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox  HorizontalAlignment="Left" VerticalAlignment="Top" Header="Mission Commands"  Height="80" Width="620" Foreground="White" FontSize="16">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Mission" Visibility="Collapsed" Style="{StaticResource TextBlockStyle}" Margin="5,0,20,0" Width="80"></TextBlock>
                                    <Button Grid.Row="2" Grid.Column="0" Content="Send"    Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding SendMissionCommands}" ></Button>
                                    <Button Grid.Row="2" Grid.Column="0" Content="Start"    Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding MissionCommands}" CommandParameter="{x:Static enums:SoftkeyEnum.StartMission }"></Button>
                                <Button Grid.Row="2" Grid.Column="1" Content="Stop"     Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding MissionCommands}" CommandParameter="{x:Static enums:SoftkeyEnum.StopMission }"></Button>
                                <Button Grid.Row="2" Grid.Column="2" Content="Restart"  Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding MissionCommands}" CommandParameter="{x:Static enums:SoftkeyEnum.RestartMission }"></Button>
                                <Button Grid.Row="2" Grid.Column="2" Content="Next WP"  Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding SetNextWaypointCommand}"></Button>
                                <Button  Content="JRestart"  Style="{DynamicResource ButtonWhiteStyle}" Command="{Binding JoystickRestartCommands}" ></Button>
                            </StackPanel>
                        </GroupBox>
                        </StackPanel>
                </Grid>
            </Border>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
